{{/*
Generate an asciidoc fragment describing fields in a namespace .yaml file.
Show only public fields.
*/}}
{{ trimSpace .namespace.description }}
{{- range (index .namespace.fields) }}

{{ template "field" dict "field" . "heading" 3 "private" (index $ "private" | bool) "prefix" (or (index $.namespace "name") "")}}
{{ end -}}

{{ define "field" }}
{{- if or .private (index .field "private") | not }}
{{- $prefixDot := and .prefix (printf "%s." .prefix) | conv.ToString }}
{{- $fullName := printf "%s%s" $prefixDot .field.name}}
{{- $heading := (.heading | conv.ToInt) }}

{{ strings.Repeat $heading "="}} {{$fullName}}

{{ trimSpace (index .field "description") }}

[horizontal]
{{- with index .field "type"}}
Data type:: {{.}}
{{end -}}
{{- with index .field "example"}}
Example value:: {{.}}
{{ end -}}
{{- range index .field "fields"}}

{{ template "field" dict "field" . "private" false "prefix" $fullName "heading" (math.Add $heading 1) }}
{{- end }}
{{- end }}
{{- end }}
